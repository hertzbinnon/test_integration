http://www.xjishu.com/zhuanli/62/201910800641.html
本发明为了实现上述目的具体采用以下技术方案：

一种基于gpu集群实现8khevc实时编码的方法，所述方法基于x86服务器，包括如下步骤：

s1：依据高效视频编码标准，将8k图像按空间位置高度划分为n个slice序列；

s2：由n张nvidiagpu组成集群，将n个slice序列分别对应送入n张gpu进行编码，得到n个slice序列对应的编码数据；

s3：对s2中得到的n个slice序列的编码数据进行修改调整，丢掉每个编码数据的序列参数集sps、图像参数集pps和slice头信息，根据整帧总体编码参数生成总序列参数集sps和总图像参数集pps，将调整后的n个slice序列的编码数据按顺序进行拼接，得到最终码流，完成8khevc实时编码。

进一步的，所述s1中依据的高效视频编码标准为itu-rbt.2073。

进一步的，所述每张nvidiagpu采用turing架构，并且每张nvidiagpu分别创建nvenc硬核编码器。

进一步的，所述s2中，根据s1得到的slice序列的大小设置创建的nvenc硬核编码器幅面，根据总体码率给每个slice序列设置码率参数，n个nvenc硬核编码器同时编码相应的slice序列，得到对应的编码数据。

进一步的，所述s3具体为：

s3.1：对于一帧8k数据，根据第一个slice序列的序列参数集sps进行标准解析，记解析pic_width_in_luma_samples和pic_height_in_luma_samples参数前的已解析的比特流为n，解析pic_width_in_luma_samples和pic_height_in_luma_samples参数后剩余的比特流为m；

再将该帧的总体宽高依次进行指数哥伦布编码，记码流为x，将n、x和m依次进行拼接，作为总体序列参数集sps，存下第一个slice序列的图像参数集pps，作为总图像参数集pps；

s3.2：依次解析其余slice序列的slice头信息，修改每一slice头信息的宏块起始位置参数first_slice_segment_in_pic_flag和slice_segment_address，其中first_slice_segment_in_pic_flag均设为0，slice_segment_address为当前slice序列在8k数据中的起始位置，把修改后的参数集按hevc标准，重生成新的slice头信息；

s3.3：将每一slice序列的新的slice头信息与对应的slice头后面的编码数据合并，得到每一slice序列的新编码数据；

s3.4：将s3.1中的总体序列参数集sps和第一个slice序列的图像参数集pps写入总码流，然后按顺序加入s3.3中得到的每一slice区域的新编码数据，得到一帧8k图像的最终码流；

s3.5：循环迭代s3.1至s3.4，直至整个序列编码完成，得到整个序列的hevc码流，即完成8khevc实时编码。

本发明的有益效果如下：

1、本发明将8k图像按空间位置，按高度划分成多个slice序列，利用多张显卡的硬编码器，对每个编码器设置统一编码码率以及码率控制参数和gop参数，对每帧的slice序列分别进行编码得到每个slice序列的编码数据，再将每个slice序列的编码数据进行处理，额外添加生成sps和pps信息，从而得到符合hevc标准的码流，实现符合hevc标准的高效率编码8k序列。

附图说明

图1是本发明具体实施方式的方法流程示意图。

图2是本发明具体实施方式的8k图像划分示意图。

图3是本发明具体实施方式的方法应用示意图。

具体实施方式

为了本技术领域的人员更好的理解本发明，下面结合附图和以下实施例对本发明作进一步详细描述。

实施例1

如图1和图3所示，本实施例提供一种基于gpu集群实现8khevc实时编码的方法，所述方法基于x86服务器，包括如下步骤：

s1：依据高效视频编码标准itu-rbt.2073，将8k图像按空间位置高度划分为n个slice序列，如图2所示，本实施例将8k7680*4320幅面的图像划分为4个slice序列，分别为7680x1088、7680x1088、7680x1088、7680x1056；

s2：由4张nvidiagpu组成集群，将4个slice序列分别对应送入4张gpu进行编码，得到4个slice序列对应的编码数据，其中，每张nvidiagpu采用turing架构，并且每张nvidiagpu分别创建nvenc硬核编码器，根据s1得到的slice序列的大小设置创建的nvenc硬核编码器幅面，根据总体码率给每个slice序列设置码率参数，码率、幅面参数根据slice序列占总体图像大小进行等比修改，如总体码率为1，则高度为1088的slice序列，码率为1088/4320，gop参数根据总码流要求统一设置，4个nvenc硬核编码器同时编码相应的slice序列，得到对应的编码数据；

s3：对s2中得到的n个slice序列的编码数据进行修改调整，丢掉每个编码数据的序列参数集sps、图像参数集pps和slice头信息，根据整帧总体编码参数生成总序列参数集sps和总图像参数集pps，将调整后的n个slice序列的编码数据按顺序进行拼接，得到最终码流，完成8khevc实时编码，具体为：

s3.1：对于一帧8k数据，根据第一个slice序列的序列参数集sps，进行标准解析，记解析pic_width_in_luma_samples和pic_height_in_luma_samples参数前的已解析的比特流为n，解析pic_width_in_luma_samples和pic_height_in_luma_samples参数后剩余的比特流为m；

再将该帧的总体宽高依次进行指数哥伦布编码，记码流为x，将n、x和m依次进行拼接，作为总体序列参数集sps，存下第一个slice序列的图像参数集pps，作为总图像参数集pps；

s3.2：依次解析其余slice序列的slice头信息，修改每一slice头信息的宏块起始位置参数first_slice_segment_in_pic_flag和slice_segment_address，其中first_slice_segment_in_pic_flag均设为0，slice_segment_address为当前slice序列在8k数据中的起始位置，把修改后的参数集按hevc标准，重生成新的slice头信息；

s3.3：将每一slice序列的新的slice头信息与对应的slice头后面的编码数据合并，得到每一slice序列的新编码数据；

s3.4：将s3.1中的总体序列参数集sps和第一个slice序列的图像参数集pps写入总码流，然后按顺序加入s3.3中得到的每一slice区域的新编码数据，得到一帧8k图像的最终码流；

s3.5：循环迭代s3.1至s3.4，直至整个序列编码完成，得到整个序列的hevc码流，即完成8khevc实时编码。

本实施例采用多gpu组成集群，然后通过拼接码流的方式，得到标准码流，达到实时高效的8khevc编码。

以上所述，仅为本发明的较佳实施例，并不用以限制本发明，本发明的专利保护范围以权利要求书为准，凡是运用本发明的说明书及附图内容所作的等同结构变化，同理均应包含在本发明的保护范围内。


