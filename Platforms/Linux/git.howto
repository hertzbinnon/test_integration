0.¿¿¿¿
https://ipaddress.com/website/github.com  #¿¿¿¿¿¿IP
https://.232.69.194 github.global.ssl.fastly.net
https://ipaddress.com/website/www.github.com # firefox 55.0.3 
140.82.113.3 github.com
199.232.69.194 github.global.ssl.fastly.net
185.199.108.153 assets-cdn.github.com
185.199.110.153 assets-cdn.github.com
185.199.111.153 assets-cdn.github.com

1.À­È¡Ô¶³Ì²Ö¿âÖ¸¶¨·ÖÖ§´úÂë
git pull <Ô¶³Ì¿âÃû> <Ô¶³Ì·ÖÖ§Ãû>:<±¾µØ·ÖÖ§Ãû>
#½«master·ÖÖ§´úÂëÀ­È¡µ½±¾µØ·ÖÖ§
eg: git pull origin master
2.ºÏ²¢´úÂë
(1)¿ª·¢·ÖÖ§£¨dev£©ÉÏµÄ´úÂë´ïµ½ÉÏÏßµÄ±ê×¼ºó£¬ÒªºÏ²¢µ½ master ·ÖÖ§
    git checkout dev
    git pull
    git checkout master
    git merge dev
    git push -u origin master
(2)µ±master´úÂë¸Ä¶¯ÁË£¬ĞèÒª¸üĞÂ¿ª·¢·ÖÖ§£¨dev£©ÉÏµÄ´úÂë
    git checkout master 
    git pull 
    git checkout dev
    git merge master 
    git push -u origin dev

2.GitÉèÖÃ»»ĞĞ·û

git config --global core.autocrlf false
git config --global core.safecrlf true
º¬Òå£º
AutoCRLF
#Ìá½»Ê±×ª»»ÎªLF£¬¼ì³öÊ±×ª»»ÎªCRLF
git config --global core.autocrlf true

#Ìá½»Ê±×ª»»ÎªLF£¬¼ì³öÊ±²»×ª»»
git config --global core.autocrlf input

#Ìá½»¼ì³ö¾ù²»×ª»»
git config --global core.autocrlf false
SafeCRLF
#¾Ü¾øÌá½»°üº¬»ìºÏ»»ĞĞ·ûµÄÎÄ¼ş
git config --global core.safecrlf true

#ÔÊĞíÌá½»°üº¬»ìºÏ»»ĞĞ·ûµÄÎÄ¼ş
git config --global core.safecrlf false

#Ìá½»°üº¬»ìºÏ»»ĞĞ·ûµÄÎÄ¼şÊ±¸ø³ö¾¯¸æ
git config --global core.safecrlf warn

3.Ô¶³Ì·ÖÖ§Óë²Ö¿âÉ¾³ı
https://www.cnblogs.com/luosongchao/p/3408365.html

4.»ù±¾²Ù×÷´óÈ«
https://www.cnblogs.com/springbarley/archive/2012/11/03/2752984.html

Git³£ÓÃ²Ù×÷ÃüÁîÊÕ¼¯£º
1) Ô¶³Ì²Ö¿âÏà¹ØÃüÁî
¼ì³ö²Ö¿â£º$ git clone git://github.com/jquery/jquery.git
²é¿´Ô¶³Ì²Ö¿â£º$ git remote -v
Ìí¼ÓÔ¶³Ì²Ö¿â£º$ git remote add [name] [url]
É¾³ıÔ¶³Ì²Ö¿â£º$ git remote rm [name]
ĞŞ¸ÄÔ¶³Ì²Ö¿â£º$ git remote set-url --push[name][newUrl]
À­È¡Ô¶³Ì²Ö¿â£º$ git pull [remoteName] [localBranchName]
ÍÆËÍÔ¶³Ì²Ö¿â£º$ git push [remoteName] [localBranchName]
 
2£©·ÖÖ§(branch)²Ù×÷Ïà¹ØÃüÁî
²é¿´±¾µØ·ÖÖ§£º$ git branch
²é¿´Ô¶³Ì·ÖÖ§£º$ git branch -r
´´½¨±¾µØ·ÖÖ§£º$ git branch [name] ----×¢ÒâĞÂ·ÖÖ§´´½¨ºó²»»á×Ô¶¯ÇĞ»»Îªµ±Ç°·ÖÖ§
ÇĞ»»·ÖÖ§£º$ git checkout [name]
´´½¨ĞÂ·ÖÖ§²¢Á¢¼´ÇĞ»»µ½ĞÂ·ÖÖ§£º$ git checkout -b [name]
É¾³ı·ÖÖ§£º$ git branch -d [name] ---- -dÑ¡ÏîÖ»ÄÜÉ¾³ıÒÑ¾­²ÎÓëÁËºÏ²¢µÄ·ÖÖ§£¬¶ÔÓÚÎ´ÓĞºÏ²¢µÄ·ÖÖ§ÊÇÎŞ·¨É¾³ıµÄ¡£Èç¹ûÏëÇ¿ÖÆÉ¾³ıÒ»¸ö·ÖÖ§£¬¿ÉÒÔÊ¹ÓÃ-DÑ¡Ïî
ºÏ²¢·ÖÖ§£º$ git merge [name] ----½«Ãû³ÆÎª[name]µÄ·ÖÖ§Óëµ±Ç°·ÖÖ§ºÏ²¢
´´½¨Ô¶³Ì·ÖÖ§(±¾µØ·ÖÖ§pushµ½Ô¶³Ì)£º$ git push origin [name]
É¾³ıÔ¶³Ì·ÖÖ§£º$ git push origin :heads/[name]

ÎÒ´Ómaster·ÖÖ§´´½¨ÁËÒ»¸öissue5560·ÖÖ§£¬×öÁËÒ»Ğ©ĞŞ¸Äºó£¬Ê¹ÓÃgit push origin masterÌá½»£¬µ«ÊÇÏÔÊ¾µÄ½á¹ûÈ´ÊÇ'Everything up-to-date'£¬·¢ÉúÎÊÌâµÄÔ­ÒòÊÇgit push origin master ÔÚÃ»ÓĞtrackÔ¶³Ì·ÖÖ§µÄ±¾µØ·ÖÖ§ÖĞÄ¬ÈÏÌá½»µÄmaster·ÖÖ§£¬ÒòÎªmaster·ÖÖ§Ä¬ÈÏÖ¸ÏòÁËorigin master ·ÖÖ§£¬ÕâÀïÒªÊ¹ÓÃgit push origin issue5560£ºmaster ¾Í¿ÉÒÔ°Ñissue5560ÍÆËÍµ½Ô¶³ÌµÄmaster·ÖÖ§ÁË¡£
    Èç¹ûÏë°Ñ±¾µØµÄÄ³¸ö·ÖÖ§testÌá½»µ½Ô¶³Ì²Ö¿â£¬²¢×÷ÎªÔ¶³Ì²Ö¿âµÄmaster·ÖÖ§£¬»òÕß×÷ÎªÁíÍâÒ»¸öÃû½ĞtestµÄ·ÖÖ§£¬ÄÇÃ´¿ÉÒÔÕâÃ´×ö¡£

$ git push origin test:master         // Ìá½»±¾µØtest·ÖÖ§×÷ÎªÔ¶³ÌµÄmaster·ÖÖ§ //ºÃÏñÖ»Ğ´ÕâÒ»¾ä£¬Ô¶³ÌµÄgithub¾Í»á×Ô¶¯´´½¨Ò»¸ötest·ÖÖ§
$ git push origin test:test              // Ìá½»±¾µØtest·ÖÖ§×÷ÎªÔ¶³ÌµÄtest·ÖÖ§

Èç¹ûÏëÉ¾³ıÔ¶³ÌµÄ·ÖÖ§ÄØ£¿ÀàËÆÓÚÉÏÃæ£¬Èç¹û:×ó±ßµÄ·ÖÖ§Îª¿Õ£¬ÄÇÃ´½«É¾³ı:ÓÒ±ßµÄÔ¶³ÌµÄ·ÖÖ§¡£

$ git push origin :test              // ¸ÕÌá½»µ½Ô¶³ÌµÄtest½«±»É¾³ı£¬µ«ÊÇ±¾µØ»¹»á±£´æµÄ£¬²»ÓÃµ£ĞÄ
3£©°æ±¾(tag)²Ù×÷Ïà¹ØÃüÁî
²é¿´°æ±¾£º$ git tag
´´½¨°æ±¾£º$ git tag [name]
É¾³ı°æ±¾£º$ git tag -d [name]
²é¿´Ô¶³Ì°æ±¾£º$ git tag -r
´´½¨Ô¶³Ì°æ±¾(±¾µØ°æ±¾pushµ½Ô¶³Ì)£º$ git push origin [name]
É¾³ıÔ¶³Ì°æ±¾£º$ git push origin :refs/tags/[name]
 
4) ×ÓÄ£¿é(submodule)Ïà¹Ø²Ù×÷ÃüÁî
Ìí¼Ó×ÓÄ£¿é£º$ git submodule add [url] [path]
Èç£º$ git submodule add git://github.com/soberh/ui-libs.git src/main/webapp/ui-libs
³õÊ¼»¯×ÓÄ£¿é£º$ git submodule init ----Ö»ÔÚÊ×´Î¼ì³ö²Ö¿âÊ±ÔËĞĞÒ»´Î¾ÍĞĞ
¸üĞÂ×ÓÄ£¿é£º$ git submodule update ----Ã¿´Î¸üĞÂ»òÇĞ»»·ÖÖ§ºó¶¼ĞèÒªÔËĞĞÒ»ÏÂ
É¾³ı×ÓÄ£¿é£º£¨·Ö4²½×ßÅ¶£©
1)$ git rm --cached [path]
2) ±à¼­¡°.gitmodules¡±ÎÄ¼ş£¬½«×ÓÄ£¿éµÄÏà¹ØÅäÖÃ½ÚµãÉ¾³ıµô
3) ±à¼­¡°.git/config¡±ÎÄ¼ş£¬½«×ÓÄ£¿éµÄÏà¹ØÅäÖÃ½ÚµãÉ¾³ıµô
4) ÊÖ¶¯É¾³ı×ÓÄ£¿é²ĞÁôµÄÄ¿Â¼
 
5£©ºöÂÔÒ»Ğ©ÎÄ¼ş¡¢ÎÄ¼ş¼Ğ²»Ìá½»
ÔÚ²Ö¿â¸ùÄ¿Â¼ÏÂ´´½¨Ãû³ÆÎª¡°.gitignore¡±µÄÎÄ¼ş£¬Ğ´Èë²»ĞèÒªµÄÎÄ¼ş¼ĞÃû»òÎÄ¼ş£¬Ã¿¸öÔªËØÕ¼Ò»ĞĞ¼´¿É£¬Èç
target
bin
*.db
 
 
git²Ù×÷-É¾³ıÎÄ¼ş
ÈÕÆÚ:2012-05-20 À´Ô´: bg090721 ·ÖÏíÖÁ:

 

gitÉ¾³ıÎÄ¼ş

rm add2.txt

git rm add2.txt

git commit -m "rm test"

git push web

 

-----------at server

cd /var/www/foo.git;sudo git update-server-info

 

------------¼ì²éÉ¾³ıĞ§¹û

cd;rm foo3 -rf;git clone http://[Ä³ip]/foo.git foo3

 

------------¸üĞÂÒÑ¾­´æÔÚµÄlocal code

cd;cd foo2

git remote add web [Ä³user]@[Ä³ip]:/var/www/foo.git/

git pull web master

5 É¾³ı±¾µØĞŞ¸Ä
https://blog.csdn.net/nmjhehe/article/details/84647278

git checkout . #±¾µØËùÓĞĞŞ¸ÄµÄ¡£Ã»ÓĞµÄÌá½»µÄ£¬¶¼·µ»Øµ½Ô­À´µÄ×´Ì¬
git stash #°ÑËùÓĞÃ»ÓĞÌá½»µÄĞŞ¸ÄÔİ´æµ½stashÀïÃæ¡£¿ÉÓÃgit stash pop»Ø¸´¡£
git reset --hard HASH #·µ»Øµ½Ä³¸ö½Úµã£¬²»±£ÁôĞŞ¸Ä¡£
git reset --soft HASH #·µ»Øµ½Ä³¸ö½Úµã¡£±£ÁôĞŞ¸Ä
# 
git reset --hard --recurse-submodules
 
git clean -df #·µ»Øµ½Ä³¸ö½Úµã
git clean ²ÎÊı
    -n ÏÔÊ¾ ½«Òª É¾³ıµÄ ÎÄ¼ş ºÍ  Ä¿Â¼
    -f É¾³ı ÎÄ¼ş
    -df É¾³ı ÎÄ¼ş ºÍ Ä¿Â¼
Ò²¿ÉÒÔÊ¹ÓÃ£º1

git checkout . && git clean -xdf

####### git tag refs https://git-scm.com/book/en/v2/Git-Basics-Tagging
git tag -a v1.4 -m "my version 1.4"
git show v1.4
# Lightweight Tags
git tag v1.4-lw

6. Delete 
https://www.cnblogs.com/mafeng/p/10959874.html
git filter-branch --force --index-filter 'git rm --cached --ignore-unmatch src/gst-plugins-bad-vr/build.sh src/gst-plugins-base-vr/build.sh' --prune-empty --tag-name-filter cat -- --all
[or]
git filter-branch --force --index-filter 'git rm -r --cached --ignore-unmatch src' --prune-empty --tag-name-filter cat -- --all

git push origin master -f [or] git push origin master --force --tags

rm -rf .git/refs/original/
git reflog expire --expire=now --all
git gc --prune=now
git gc --aggressive --prune=now

7.Merge subbranch
git checkout master
git pull -v
git checkout subbranch
git merge master 

8. Proxy (un)set
git config --global  --list
git config --global https.proxy https://127.0.0.1:33103
git config --global http.proxy http://127.0.0.1:33103
git config --global --unset http.proxy
git config --global --unset https.proxy

8. window set
git config --global core.autocrlf input
git config --global --list
git config --list

9. clone project
git clone --recursive <url>
git submodule update --init --recursive
git submodule update --recursive --remote
or
git submodule update --recursive
or
git pull --recurse-submodules

10 
git fetch origin # update remote branch info
git branch -a
git checkout -b blender-v2.93-release  remotes/origin/blender-v2.93-release
git pull -v  # update local branch 

11 
#https://git-scm.com/docs/git-archive
git archive --format=tar --prefix=opencv-git-3.1.0/ 3.1.0 | gzip >opencv-git-3.1.0.tar.gz

12 check file name according to commit
git rev-list --objects --all | grep 002b44b33094a4a98e6f202b4b238ede384a9c27


13 Example
>cd cerbero
>git branch -a
  1.16.2
  main
  master
* origin/1.18
  remotes/origin/1.0
  remotes/origin/1.10
  remotes/origin/1.12
  remotes/origin/1.14
  remotes/origin/1.16
  remotes/origin/1.18
  remotes/origin/1.2
  remotes/origin/1.4
  remotes/origin/1.6
  remotes/origin/1.8
  remotes/origin/HEAD -> origin/master
  remotes/origin/main
  remotes/origin/master

 git checkout master  # master branch
 git pull origin main # pull main branch to master(local)

 git checkout -b main remotes/origin/main # create remote main branch to local branch(main)  
 git checkout origin/1.18 # create remote 1.18 branch to local branch(origin/1.18)

 git checkout -b origin/1.18 remotes/origin/1.18
 git pull origin 1.18

 git checkout master
 git push origin master
 git checkout main
 git push origin main
 git checkout 1.18
 git push origin 1.18

14 fetch all branches

#https://stackoverflow.com/questions/10312521/how-to-fetch-all-git-branches
git branch -r | grep -v '\->' | sed "s,\x1B\[[0-9;]*[a-zA-Z],,g" | while read remote; do git branch --track "${remote#origin/}" "$remote"; done
git fetch --all
git pull --all


15 Github gh 
sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-key C99B11DEB97541F0
sudo apt-add-repository https://cli.github.com/packages
sudo apt update
sudo apt install gh

# set access token
gh auth login
# modify token
vim ~/.config/gh/hosts.yml 


# 
1.¿¿¿¿¿¿¿¿ rm
¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿.
git checkout -- fileName¿
2.¿¿git rm ¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿,¿
git reset HEAD fileName;
¿¿¿checkout¿¿¿¿¿
git checkout -- fileName
3.¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿
git checkout 13899130f34668654a996dfff4687c605de669a5 --  third-party/PanoTools/stitchEm/env.sh

###
token¿¿
¿¿¿¿ > Settings > Personal access tokens > Generate new token

token¿¿
clone¿¿¿¿¿¿¿¿token¿http¿¿¿https://$GH_TOKEN@github.com/owner/repo.git
clone¿¿¿¿¿¿¿http¿¿¿¿¿¿¿token
¿¿clone¿¿¿¿¿.git/config¿¿¿¿¿http¿¿¿token¿https://$GH_TOKEN@github.com/owner/repo.git
