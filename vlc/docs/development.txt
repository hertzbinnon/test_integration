Developing VLC on android 
Method 1:
	We need a access plugin to communicate with signaling server, eg loggin.
	Refer to https://github.com/centricular/gstwebrtc-demos/: it implement
    a private protocol for register,loggin etc. We need webrtc peer communication,
    and send stream by gstreamer,but don`t need receiving stream througth gstreamer.
    libwebrtc is also referred for communication, because we need call in full derection.
	
	task 1 Compiling libwebrtc on android and integrated to vlc, or integrated gstwebrtc
           to vlc, so adding new library to vlc for android is need.

    task 2 A new access plugin called 'webrtc' is created. It first registered itself 
	       on signaling server,and then calling peer or called by other peer by libwebrtc 
           or gstwebrtc. Secend,a pipeline build by gstreamer used to send local stream
 	       to remote peer,Simultaneously remote stream send by remote peer is received by 
           vlc rtp plugin.

    task 3 Refer to SIP, Protocol defines REGISTER,INVITE,BYE  command.

Method 2:
	We need a new Activity named WebrtcActivity,this activity include some surfaceView used
	to presentation playback.One of them is a local stream,the other is some remote streams.
	We used gstreamer android api(Java,jni) to implenment send local stream and playback
	local stream. Vlc playback at least remote stream.
	task 1: intergred gst-sdk-android to vlc-android.
    task 2: add New lable to start WebrtcActivity and WebrtcViewActivity to vlc-android.
            WebrtcViewActivity is dynamicly add SurfaceView .For now we do onetoone only.


Developing WEBAPP 
    task 4 Web server refer to nginx,web app implementation is same as vlc app.

Developing SIGNAL server
    task 5 Signaling server implement by ats, it need to implemnt Protocol, support DB(register peer),
           transport webrtc payload fastly same as a network switch router.

KMS support
    task 6 Inspite p2p is ok, but kms is sometime needed.
    
onetoone
Stage 1
       vlc app ---> ats <--- vlc app
              \              /
			   \ ----rtp--- /
Stage 2
       vlc app ---> ats <--- web app
              \              /
			   \ ----rtp--- /
Stage 3
       vlc app ---> ats <--- web app
             \       |        /
			  \      V       /
			   \ ----kms----/
manytomany
ICE first tries to make a connection using the host address obtained from a device's operating system and network card; if that fails (which it will for devices behind NATs) ICE obtains an external address using a STUN server, and if that fails, traffic is routed via a TURN relay server.
